@model NivesBrelihPhotography.Models.PhotoModels.ViewModels.Admin_ViewModels.AdminPhotoCreateVm

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .form-group .checkbox-group {
        padding-top: 0 !important;
    }
    .form-group img {
        max-width: 280px;
        margin-top: 20px;
        margin-bottom: 20px;
    }
    #album-cover-selector {
        display: none;
    }
</style>

<h2>Add</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Photo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoTitle, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhotoTitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PhotoTitle, "", new {@class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhotoDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PhotoDescription,5,100, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhotoDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.PhotoFile, new { type = "file" })
                @Html.ValidationMessageFor(model => model.PhotoFile, "", new { @class = "text-danger" })
                <div id="img-holder" class="img-holder">
                    
                </div>
            </div>
        </div>


        

<div class="form-group">
    @Html.LabelFor(model => model.PhotoCategories, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox checkbox-group">
            @for (var i = 0; i < Model.PhotoCategories.Count(); i++)
            {
                <label class="checkbox">
                    @Html.HiddenFor(model => model.PhotoCategories[i].CategoryId)
                    @Html.EditorFor(model => model.PhotoCategories[i].Checked)
                    @Html.DisplayFor(model => model.PhotoCategories[i].CategoryName)
                    @Html.HiddenFor(model => model.PhotoCategories[i].CategoryName)
                </label>
            }
        </div>
    </div>
</div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.IsOnPortfolio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label>@Html.EditorFor(model=>model.IsOnPortfolio)</label>
                    @Html.ValidationMessageFor(model => model.IsOnPortfolio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="album-selector" class="form-group">
            @Html.LabelFor(model => model.AlbumId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownListFor(x=>x.AlbumId,Model.AllAlbums)
                </div>
            </div>
        </div>

        <div id="album-cover-selector" class="form-group">
            @Html.LabelFor(model => model.IsAlbumCover, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label>@Html.EditorFor(model => model.IsAlbumCover)</label> 
                    @Html.ValidationMessageFor(model => model.IsAlbumCover, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    <script>
        $(function () {
            $("#album-selector select").change(function() {

                var $albumId = $("select option:selected").val();
                
                if ($albumId != -1) {

                        $("#album-cover-selector").slideDown();

                } else {

                        $("#album-cover-selector").slideUp("fast");

                }
            });



            $("#PhotoFile").on('change', function () {

                if (typeof (FileReader) != "undefined") {

                    var image_holder = $("#img-holder");
                    image_holder.empty();

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $("<img />", {
                            "src": e.target.result,
                            "class": "img-responsive"
                        }).appendTo(image_holder);

                    }
                    image_holder.show();
                    reader.readAsDataURL($(this)[0].files[0]);
                } else {
                    alert("This browser does not support FileReader.");
                }
            });
        });
      

    </script>
}
